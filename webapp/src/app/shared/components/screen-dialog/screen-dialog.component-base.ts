import { AfterViewInit, Component, ViewChild, ViewContainerRef } from '@angular/core';
import { createComponent, setFocus } from '@app/core/utils';
import { Footer, Header } from 'primeng/api';
import { Dialog, DialogModule } from 'primeng/dialog';
import { AccessibilityDirective } from '../../directives/accessibility.directive';

export const COMPONENT_PROVIDERS = [];
export const COMPONENT_IMPORTS = [DialogModule, AccessibilityDirective, Header, Footer];
/**
 * Component that loads a child route in the main body.
 * It is mainly used in the screens generated by `UI Studio` with navigation of type `Dialog`
 */
@Component({ template: '' })
export class ScreenDialogComponentBase implements AfterViewInit {
  /**
   * The property to display the dialog if `true`
   */
  displayDialog = true;
  /**
   * Holds the active element when opening a dialog
   */
  activeElement: Element;
  /**
   * Content element
   */
  @ViewChild(Dialog, { static: false }) dialog;

  /**
   * The reference to the content view container.
   */
  @ViewChild('content', { read: ViewContainerRef, static: false }) content!: ViewContainerRef;

  /**
   * Represents the dynamic component meta-data to be rendered in the content container.
   */
  dynamicComponent: any;

  openComponent(componentImport: Promise<any>, data: any) {
    this.dynamicComponent = { componentImport, data };
  }

  ngAfterViewInit(): void {
    if (this.dynamicComponent) {
      const { componentImport, data } = this.dynamicComponent;
      createComponent(componentImport, this.content, data);
    }
    this.activeElement = document.activeElement;
    setFocus(this.dialog.el, 'button');
  }

  hide() {
    this.displayDialog = false;
    const { data } = this.dynamicComponent;
    data.dialogContainer?.clear();
  }
}
